#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir>

# fail fast
set -e

# config
APACHE_VERSION="2.2.22"
APACHE_PATH="apache"
PHP_VERSION="5.3.10"
PHP_PATH="php"

BIN_DIR=$(dirname $0)
BUILD_DIR=$1
CACHE_DIR=$2
LP_DIR=`cd $(dirname $0); cd ..; pwd`

COMPOSER_URL="http://getcomposer.org/composer.phar"

# include .files when moving things around
shopt -s dotglob

cd $BUILD_DIR

# move app things to www
mkdir -p $CACHE_DIR/www
mv * $CACHE_DIR/www
mv $CACHE_DIR/www .

# keep Procfile
if [ -f www/Procfile ]; then
  mv www/Procfile .
fi

APACHE_URL="https://s3.amazonaws.com/php-lp/apache-$APACHE_VERSION.tar.gz"
echo "-----> Bundling Apache version $APACHE_VERSION"
curl --silent --max-time 60 --location "$APACHE_URL" | tar xz

PHP_URL="https://s3.amazonaws.com/php-lp/php-$PHP_VERSION.tar.gz"
echo "-----> Bundling PHP version $PHP_VERSION"
curl --silent --max-time 60 --location "$PHP_URL" | tar xz

# update config files
cp $LP_DIR/conf/httpd.conf $APACHE_PATH/conf
cp $LP_DIR/conf/php.ini php

# make php available on bin
mkdir -p bin
ln -s /app/php/bin/php bin/php

# check if we have Composer dependencies and vendors are not bundled
if [ -f www/composer.json ]; then

  # download composer.phar if it is not available
  if [ ! -f www/composer.phar ]; then
  	echo "-----> Downloading and Installing Composer"
  	curl --silent --max-time 60 --location "$COMPOSER_URL" > /app/www/composer.phar > /dev/null
  fi
  
  # move into webroot
  cd www

  # check for composer updates
  echo "-----> Updating Composer"
  LD_LIBRARY_PATH=$BUILD_DIR/php/ext $BUILD_DIR/php/bin/php composer.phar self-update

  # determine whether to update or install. If a lock file is present we want to
  # update instead of install
  GIT_DIR_ORIG=$GIT_DIR
  unset GIT_DIR

  if [ -e $BUILD_DIR/www/composer.installed ]; then
  	echo "-----> Updating Composer Dependencies"
    LD_LIBRARY_PATH=$BUILD_DIR/php/ext $BUILD_DIR/php/bin/php composer.phar update
  else
    echo "-----> Installing Composer Dependencies"
    LD_LIBRARY_PATH=$BUILD_DIR/php/ext $BUILD_DIR/php/bin/php composer.phar install
    touch $BUILD_DIR/www/composer.installed
    echo "Composer Installed." > $BUILD_DIR/www/composer.installed
  fi

  # move back to the build directory
  cd $BUILD_DIR
  export GIT_DIR=$GIT_DIR_ORIG
fi

# compile zf2 autoload classmap files
#echo "-----> Compiling ZF2 autoload classmap files"
#for dir in www/module/*/
#do
    #echo "-----> Compiling autoload classmap file for " ${dir##*/}
    #$BUILD_DIR/php/bin/php www/vendor/zendframework/zendframework/bin/classmap_generator.php -l www/module/${dir##*/}/ -w -o www/module/${dir##*/}/autoload_classmap.php
#done

cat >>boot.sh <<EOF
for var in \`env|cut -f1 -d=\`; do
  echo "PassEnv \$var" >> /app/apache/conf/httpd.conf;
done
touch /app/apache/logs/error_log
touch /app/apache/logs/access_log
tail -F /app/apache/logs/error_log &
tail -F /app/apache/logs/access_log &
export LD_LIBRARY_PATH=/app/php/ext
export PHP_INI_SCAN_DIR=/app/www
echo "Launching apache"
exec /app/apache/bin/httpd -DNO_DETACH
EOF

chmod +x boot.sh

# clean the cache
rm -rf $CACHE_DIR/*
